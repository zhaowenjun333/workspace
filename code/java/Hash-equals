1.HashMap


重写equals 方法，最好，也可以理解成必须重写hashCode方法


	
@Override
public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((id == null) ? 0 : id.hashCode());
    return result;
}

@Override
public boolean equals(Object obj) {
    if (this == obj)
        return true;
    if (obj == null)
        return false;
    if (getClass() != obj.getClass())
        return false;
    Entity other = (Entity) obj;
    if (id == null) {
        if (other.id != null)
            return false;
    } else if (!id.equals(other.id))
        return false;
    return true;
}


equals，hashCode 方法主要用来 判断Java 中的对象是否相等的。
如何判断是否相等。
hashCode 相等，再equals 相等，那么就相等了。 
假如 hashCode 不等，那么直接就不相等，不用看 equals 了。 假如 hashCode 相等，equals 不等，那么也不相等。 
总的来说，先看hashCode 是否相等，再看 equals 是否相等。





注意：数值类型如Long，Integer 为 map 的key 是后put的会覆盖前面的。 而 自定义的bean不会
